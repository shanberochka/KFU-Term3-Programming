/*
Создать основной класс Matrix и произвольный класс Polynom
Поля : размерность и указатель на массив
	Конструкторы : с параметром(размерность), с параметрами(размерность и указатель на массив)
	Деструктор
	Методы :
Взять размерность
Взять i, j - элемент матрицы
ПЕРЕГРУЗИТЬ ОПЕРАТОРЫ В ОСНОВНОМ И ПРОИЗВОДНОМ КЛАССЕ :
ОПЕРАТОР = (ПРИСВАИВАНИЕ)
ОПЕРАТОР - (ВЫЧИТАНИЕ МАТРИЦ И ПОЛИНОМОВ)
ОПЕРАТОР + (СЛОЖЕНИЕ МАТРИЦ И ПОЛИНОМОВ)
ОПЕРАТОР * (ПЕРЕМНОЖЕНИЕ МАТРИЦ И ПОЛИНОМОВ)

В производном класса Polynom :
Перегрузить метод show
Конструктор с двумя параметрами
Конструктор с параметрами и указателем на массив
ПЕРЕГРУЗИТЬ ОПЕРАТОР * ДЛЯ ОБЪЕКТОВ Polynom
*/

#include "Array.h"
#include "Polynom.h"
#include "Matrix.h"
 
void ex()
{
	int mass1[]{ 2, 0, 7 };
	Array a(3, mass1);

	int mass2[]{ 4, 2, 1 };
	Array b(3, mass2);

	//std::cout << a + b;

	Polynom p1(2, mass1);
	Polynom p2(2, mass2);
	//(p1 * p2).show();
	//p1.show();
	//(p1 + p2).show();
	//std::cout << p1 - p2;
	
	Polynom mat1[2];

	mat1[0] = p1;
	mat1[1] = p2;

	Polynom mat2[2];

	mat2[0] = p1 - p2;
	mat2[1] = p1 + p2;

	Matrix m1(2, mat1);
	Matrix m2(2, mat2);

	Matrix m3 = m1 + m2;
	m3.show();
	/*
	Array* ar = new Array(3);
	ar = &(p1 + p2);
	ar->show();
	Polynom* p3 = dynamic_cast<Polynom*>(ar);
	if (p3) p3->show();
	*/
}